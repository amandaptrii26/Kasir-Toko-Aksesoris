/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekpemdas2;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Amanda Putri
 */

public class DataBarang extends javax.swing.JFrame {
    
    private DefaultTableModel model;
    
    private void autonumber(){
        try {
            Connection c = ConfigDB.config();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM Barang ORDER BY id_barang DESC";
            ResultSet r = s.executeQuery(sql);
            if (r.next()) {
                String id = r.getString("id_barang").substring(2);
                String BR = "" +(Integer.parseInt(id)+1);
                String Nol = "";
                
                if(BR.length()==1)
                {Nol = "000";}
                else if(BR.length()==2)
                {Nol = "00";}
                else if(BR.length()==3)
                {Nol = "0";}
                else if(BR.length()==4)
                {Nol = "";}
                txtIdBarang.setText("BR" + Nol + BR);
            } else {
                txtIdBarang.setText("BR0001");
            }
            r.close();
            s.close();
        } catch (NumberFormatException | SQLException e) {
            System.out.println("autonumber error");
        }
    }

    
    public void clear(){
        txtNamaBarang.setText("");
        txtHarga.setText("");
        txtStokBarang.setText("");
    }
    
    public void loadData(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        try {
            Connection c = ConfigDB.config();
            Statement s = c.createStatement();

            String sql = "SELECT * FROM barang";
            ResultSet r = s.executeQuery(sql);
            
            while (r.next()) {
                Object[] o = new Object[5]; 
                o[0] = r.getString("id_barang");
                o[1] = r.getString("kategori");
                o[2] = r.getString("nama_barang");
                o[3] = r.getString("harga");
                o[4] = r.getString("stok");
   
                model.addRow(o);
            }
            r.close();
            s.close();
        } catch (Exception e) {
            System.out.println("terjadi kesalahan");
        }
    }
    
    public void cariData(){
        DefaultTableModel tabel = new DefaultTableModel();

        tabel.addColumn("id_barang");
        tabel.addColumn("kategori");
        tabel.addColumn("nama_barang");
        tabel.addColumn("harga");
        tabel.addColumn("stok_barang");

        try {
            Connection c = ConfigDB.config();
            String sql = "Select * FROM Barang where id_barang like '%" + txtCariBarang.getText() + "%'" +
                    "or nama_barang like '%" + txtCariBarang.getText() + "%'";
            Statement stat = c.createStatement();
            ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {                
                tabel.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                });
            }
            TabelBarang.setModel(tabel);
            loadData();
        } catch (SQLException e) {
            System.out.println("Cari Data Error");
        }finally{
                
        }
    }

    /**
     * Creates new form ListBarang
     */
    public DataBarang() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        model = new DefaultTableModel();
        
        TabelBarang.setModel(model);
        
        model.addColumn("id_barang");
        model.addColumn("kategori");
        model.addColumn("nama_barang");
        model.addColumn("harga");
        model.addColumn("stok");
        
        loadData();
        autonumber();
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatal.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        IdCustomer = new javax.swing.JLabel();
        IdBarang = new javax.swing.JLabel();
        JumlahBarang = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        txtIdBarang = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelBarang = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        HargaBarang1 = new javax.swing.JLabel();
        HargaBarang2 = new javax.swing.JLabel();
        JumlahBarang1 = new javax.swing.JLabel();
        txtStokBarang = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        HargaBarang3 = new javax.swing.JLabel();
        txtCariBarang = new javax.swing.JTextField();
        CbKategori = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 36)); // NOI18N
        jLabel1.setText("DATA BARANG ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(191, 191, 191))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(17, 17, 17))
        );

        IdCustomer.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        IdBarang.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        IdBarang.setText("ID Barang");

        JumlahBarang.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        JumlahBarang.setText("Harga");

        TabelBarang.setBackground(new java.awt.Color(255, 153, 153));
        TabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelBarangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelBarang);

        btnHapus.setBackground(new java.awt.Color(255, 204, 204));
        btnHapus.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(255, 204, 204));
        btnSimpan.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        HargaBarang1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        HargaBarang1.setText("Nama Barang");

        HargaBarang2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        HargaBarang2.setText("Kategori Barang");

        JumlahBarang1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        JumlahBarang1.setText("Stok Barang");

        txtStokBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStokBarangActionPerformed(evt);
            }
        });

        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 204, 204));
        btnEdit.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(255, 204, 204));
        btnBatal.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnBatal.setText("BATAL");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        HargaBarang3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        HargaBarang3.setText("Cari Data Barang");

        txtCariBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariBarangActionPerformed(evt);
            }
        });

        CbKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tas", "Gelang", "Mainan", "Kerudung", "Souvenir", "Kacamata", "Alat Tulis", "Penjepit Rambut", "Gantungan Kunci" }));
        CbKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbKategoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdBarang)
                            .addComponent(JumlahBarang)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JumlahBarang1)
                            .addComponent(HargaBarang2)
                            .addComponent(CbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(HargaBarang1)
                            .addComponent(txtNamaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(HargaBarang3)
                            .addComponent(txtCariBarang)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(IdCustomer))
                    .addComponent(jScrollPane2))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HargaBarang2)
                    .addComponent(IdBarang)
                    .addComponent(HargaBarang1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CbKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IdCustomer)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JumlahBarang)
                            .addComponent(JumlahBarang1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(HargaBarang3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int i = TabelBarang.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris data yang akan dihapus!");
            return;
        }

        String id = (String) model.getValueAt(i, 0); 

        int pernyataan = JOptionPane.showConfirmDialog(
            null, 
            "Apakah yakin akan dihapus?", 
            "Konfirmasi", 
            JOptionPane.OK_CANCEL_OPTION, 
            JOptionPane.QUESTION_MESSAGE
        );

        if (pernyataan == JOptionPane.OK_OPTION) {
            try {
            Connection c = ConfigDB.config(); // Pastikan koneksi database valid
            String sql = "DELETE FROM barang WHERE id_barang = ?";
            PreparedStatement p = c.prepareStatement(sql);
            p.setString(1, id);
            p.executeUpdate();
            p.close();

            JOptionPane.showMessageDialog(null, "Data telah dihapus");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Terjadi Kesalahan: " + e.getMessage());
            System.out.println("Error: " + e.getMessage());
        } finally {
            btnSimpan.setEnabled(true);
            btnEdit.setEnabled(false);
            btnHapus.setEnabled(false);
            btnBatal.setEnabled(false);
            loadData();   
            autonumber(); 
            clear();      
        }
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        String id = txtIdBarang.getText();
        String nama = txtNamaBarang.getText();
        String stok = txtStokBarang.getText();
        String harga = txtHarga.getText();
        String kategori = (String) CbKategori.getSelectedItem();
        
        try{    
            Connection c = ConfigDB.config();
            String sql = "INSERT INTO Barang (id_barang, nama_barang, stok, harga, kategori) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement p = c.prepareStatement(sql);
            p.setString(1, id);
            p.setString(2, nama);
            p.setString(3, stok);
            p.setString(4, harga);
            p.setString(5, kategori);
            p.executeUpdate();
            p.close();

            JOptionPane.showMessageDialog(null, "Data telah disimpan");
            loadData();
            autonumber();
            clear();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtStokBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStokBarangActionPerformed
       cariData();
    }//GEN-LAST:event_txtStokBarangActionPerformed

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
       cariData();
    }//GEN-LAST:event_txtHargaActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int i = TabelBarang.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris data yang akan diubah!");
            return;
        }

        String id = (String) model.getValueAt(i, 0);
        String kategori = (String) CbKategori.getSelectedItem();
        String nama = txtNamaBarang.getText();
        String harga = txtHarga.getText();
        String stok = txtStokBarang.getText();

        try {
            Connection c = ConfigDB.config();
            String sql = "UPDATE barang SET nama_barang = ?, kategori = ?, harga = ?, stok = ? WHERE id_barang = ?";
            PreparedStatement p = c.prepareStatement(sql);
            p.setString(1, nama);       
            p.setString(2, kategori);   
            p.setString(3, harga);      
            p.setString(4, stok);       
            p.setString(5, id);        

            p.executeUpdate();
            p.close();

            JOptionPane.showMessageDialog(null, "Data telah diubah");
            btnSimpan.setEnabled(true);
            btnEdit.setEnabled(false);
            btnHapus.setEnabled(false);
            btnBatal.setEnabled(false);
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            System.out.println("Update Error: " + e.getMessage());
        } finally {
            loadData();   
            autonumber(); 
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        clear();
        loadData();
        btnSimpan.setEnabled(true);
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        btnBatal.setEnabled(false);
        autonumber();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void txtCariBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariBarangActionPerformed
        ListBarang a = new ListBarang();
        a.setVisible(true);
    }//GEN-LAST:event_txtCariBarangActionPerformed

    private void CbKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbKategoriActionPerformed

    private void TabelBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelBarangMouseClicked
        btnSimpan.setEnabled(false);
        btnEdit.setEnabled(true);
        btnHapus.setEnabled(true);
        btnBatal.setEnabled(true);
        
        int i = TabelBarang.getSelectedRow();
        if(i == -1) {
            return;
        }
        
        String id = (String) model.getValueAt(i, 0);
        String kategori = (String) model.getValueAt(i, 1);
        String nama = (String) model.getValueAt(i, 2);
        String harga = (String) model.getValueAt(i, 3);
        String stok = (String) model.getValueAt(i, 4);
        
        txtIdBarang.setText(id);
        txtNamaBarang.setText(nama);
        CbKategori.setSelectedItem(kategori);
        txtHarga.setText(harga);
        txtStokBarang.setText(stok);
    }//GEN-LAST:event_TabelBarangMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
        new DataBarang().setVisible(true);
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbKategori;
    private javax.swing.JLabel HargaBarang1;
    private javax.swing.JLabel HargaBarang2;
    private javax.swing.JLabel HargaBarang3;
    private javax.swing.JLabel IdBarang;
    private javax.swing.JLabel IdCustomer;
    private javax.swing.JLabel JumlahBarang;
    private javax.swing.JLabel JumlahBarang1;
    private javax.swing.JTable TabelBarang;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCariBarang;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIdBarang;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtStokBarang;
    // End of variables declaration//GEN-END:variables
}